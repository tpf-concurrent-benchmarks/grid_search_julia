version: "3.7"

services:
  graphite:
    image: graphiteapp/graphite-statsd:1.1.10-4
    volumes:
      - "./statsd.config.js:/opt/statsd/config/udp.js:ro"
      - "./statsd.config.js:/opt/statsd/config/tcp.js:ro"
      - "./graphite.carbon.conf:/opt/graphite/conf/carbon.conf:ro"
      - "./graphite.storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf:ro"
      - "./graphite:/opt/graphite/storage/:rw"
    ports:
      - "8080:8080"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.0
    ports:
      - "8888:8080"
    command: >
      -storage_driver="statsd"
      -storage_driver_host="graphite:8125"
      -storage_driver_db="cadvisor"
      -storage_driver_buffer_duration="1m0s"
      --enable_metrics=cpu,cpuLoad,disk,diskIO,memory,network
    depends_on:
      - graphite
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
    deploy:
      mode: global
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  grafana:
    image: efoppiano/grafana:0.1
    ports:
      - "8081:3000"
    volumes:
      - "grafana_config:/var/lib/grafana"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:3000/
      - GF_LOG_FILTERS=rendering:debug
    depends_on:
      - graphite

  renderer:
    image: grafana/grafana-image-renderer:latest
    ports:
      - "8082:8081"
  worker:
    image: grid_search_julia_worker
    tty: true
    stdin_open: true
    volumes:
      - "./src:/opt/app"
      # The authorized_keys_ro file will be copied to authorized_keys
      # This is because the sshd server won't use the file if it's owned by a different user
      - "./.keys/manager_rsa.pub:/root/.ssh/authorized_keys_ro:ro"
      - type: bind
        source: ./ips
        target: /opt/app/ips
        read_only: false
    deploy:
      replicas: 2
      resources:
        limits:
          memory: 2G
      restart_policy:
        condition: none
    environment:
      - LOCAL=${LOCAL}
      - NODE_ID=worker_{{.Task.Slot}}
      - TASK_SLOT={{.Task.Slot}}
    
    command: /bin/bash -c "\
             cp /root/.ssh/authorized_keys_ro /root/.ssh/authorized_keys && \
             /usr/sbin/sshd -D"

  manager:
    image: grid_search_julia_manager
    tty: true
    stdin_open: true
    command: /bin/bash
    depends_on:
      - worker
    volumes:
      - "./src:/opt/app"
      - "./.keys/manager_rsa:/root/.ssh/id_rsa:ro"
      - type: bind
        source: ./ips
        target: /opt/app/ips
        read_only: true
    deploy:
      resources:
        limits:
          memory: 2G
      restart_policy:
        condition: none
    environment:
      - LOCAL=${LOCAL}
      - NODE_ID=manager

volumes:
  grafana_config:
    external: true
